{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww16480\viewh13560\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 Generating Publication Counts for Authors
\b0 \
\
166,246,342 records in corestoauthors\
27,865,734 records in authorpubcnt\
15,571,914 records in authorpubcnt have a pubcnt of 1 (Can you really have an author that doesn't have a publication count.  Same for affilaition).\
\
\
CREATE TABLE corestoauthors(\
	eid VARCHAR(20),\
	auid VARCHAR(20) SORTKEY,\
	PRIMARY KEY(eid,auid));\
\
Takes 0.2s.\
\
\
copy corestoauthors from 's3://els-ats/scopuscnts/pc/author/set1/' CREDENTIALS 'aws_access_key_id=;aws_secret_access_key=' delimiter '|';\
\
Takes 5m 32s.\
\
CREATE TABLE authorpubcnt(\
	auid VARCHAR(20) SORTKEY,\
	pubcnt INTEGER,\
	PRIMARY KEY(auid));\
\
Takes 0.19s\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3000\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 INSERT INTO authorpubcnt(auid,pubcnt)\
SELECT auid, COUNT(*) \
FROM corestoauthors\
GROUP BY auid\
ORDER BY auid;\
\
Takes 48.83s\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
UNLOAD ('\
SELECT * FROM authorpubcnt\
ORDER BY auid') to  's3://els-ats/scopuscnts/pc/author/darin/auth-' CREDENTIALS 'aws_access_key_id=;aws_secret_access_key=' delimiter '=' GZIP;\
\
\
Creates (2) zip files each about 51MB in size. Single compressed file of 84MB.   Uncompressed 382MB.\
\
Takes less than 1s.\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 \
Generating Cited By Counts for Cores\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0  759,190,044 records in corestoreferences\
 141,752,199 records in corecbcnt\
   99,575,432 records in corecbcnt have a cbcnt=1\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 CREATE TABLE corestoreferences(\
	eid VARCHAR(20),\
	refid VARCHAR(20) SORTKEY,\
	PRIMARY KEY(eid,refid));\
\
Takes 0.19s\
\
\
CREATE TABLE corecbcnt(\
	refid VARCHAR(20) SORTKEY,\
	cbcnt INTEGER,\
	PRIMARY KEY(refid));\
\
Takes 0.19s\
\
\
COPY corestoreferences FROM 's3://els-ats/scopuscnts/cbc/core/set1/' CREDENTIALS 'aws_access_key_id=;aws_secret_access_key=' delimiter '|' GZIP;\
\
Takes 23m 41s\
\
\
INSERT INTO corecbcnt(refid,cbcnt)\
SELECT refid, COUNT(*) \
FROM corestoreferences\
GROUP BY refid\
ORDER BY refid;\
\
Takes  4m 54s\
\
unload ('\
SELECT * FROM corecbcnt\
ORDER BY refid') to  's3://els-ats/scopuscnts/cbc/core/darin/core-' CREDENTIALS 'aws_access_key_id=;aws_secret_access_key=' delimiter '=' GZIP;\
\
Creates (2) zip files each about 231MB in size.  Single compressed file of 404MB.  Uncompressed 1.9GB.\
\
Takes  57s\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Calculating Citref
\b0 \
\
In contrast to calculating publication and cited by counts (where the entire file is calculated from scratch), this approach \
assumes tables will be maintained for the previous day (n-1) and the current day (n).  A delta will then be calculated\
between the 2 tables to identify those records that would need to be updated with the new citref information.\
\
# Create the table (will strip the prefix form the eid so it can be stored as a decimal field)\
CREATE TABLE citref(\
	neid DECIMAL,\
	refid VARCHAR(20) SORTKEY,\
	PRIMARY KEY(neid,refid));\
\
Takes 0.2s\
\
\
# Insert the records (make a numeric version of the eid)\
INSERT INTO citref(\
SELECT CAST(SUBSTRING(eid,8) AS DECIMAL) AS neid, refid\
FROM corestoreferences);\
\
Takes 17m 35s\
\
\
# Table to hold the sum (think of this as a hash)\
CREATE TABLE citrefsum(\
	refid VARCHAR(20) SORTKEY,\
	tot DECIMAL(38,0),\
	PRIMARY KEY(refid));\
	\
Takes 0.23s\
\
\
# Group and Sum\
INSERT INTO citrefsum(\
SELECT refid, SUM(neid) AS tot\
FROM citref\
GROUP BY refid\
ORDER BY refid);\
\
Takes 5m 39s\
\
\
# Need to do the above twice (we will have an old and new version of these tables)\
\
# Calculate the delta (to identify the records that need to have their citref records updated)\
CREATE TABLE citrefdelta(\
	refid VARCHAR(20) SORTKEY,\
	tot DECIMAL(38,0),\
	PRIMARY KEY(refid));\
\
Takes .2 s\
\
INSERT INTO citrefdelta(\
SELECT * FROM citrefnew\
MINUS\
SELECT * FROM citrefold);\
\
Takes 2m 51s\
\
Note, this time is not a real example as both tables were the same when I ran the test (I did not have a citrefnew and citrefold)\
\
CREATE TABLE citrefresults(\
	refid VARCHAR(20) SORTKEY,\
	eid VARCHAR(20),\
	PRIMARY KEY(refid,eid));\
\
Takes 0.24s\
\
# Go go get the records that have changed\
INSERT INTO citrefresults(\
SELECT citrefdelta.refid, corestoreferences.eid  FROM citrefdelta, corestoreferences\
WHERE citrefdelta.refid= corestoreferences.refid\
ORDER BY citrefdelta.refid);\
\
Actually dummied this out to use citrefsum (instead of citrefdelta).\
\
Takes 23m 28s\
}