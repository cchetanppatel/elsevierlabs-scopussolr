<!--

 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!--
  
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default) 
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->
<schema name="example" version="1.5">
<!--
 attribute "name" is the name of this schema and is only used for display purposes.
       version="x.y" is Solr's version number for the schema syntax and 
       semantics.  It should not normally be changed by applications.

       1.0: multiValued attribute did not exist, all fields are multiValued 
            by nature
       1.1: multiValued attribute introduced, false by default 
       1.2: omitTermFreqAndPositions attribute introduced, true by default 
            except for text fields.
       1.3: removed optional field compress feature
       1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
            behavior when a single string produces multiple tokens.  Defaults 
            to off for version >= 1.4
       1.5: omitNorms defaults to true for primitive field types 
            (int, float, boolean, string...)
     
-->
<fields>
<!--
 Valid attributes for fields:
     name: mandatory - the name for the field
     type: mandatory - the name of a field type from the 
       <types> fieldType section
     indexed: true if this field should be indexed (searchable or sortable)
     stored: true if this field should be retrievable
     docValues: true if this field should have doc values. Doc values are
       useful for faceting, grouping, sorting and function queries. Although not
       required, doc values will make the index faster to load, more
       NRT-friendly and more memory-efficient. They however come with some
       limitations: they are currently only supported by StrField, UUIDField
       and all Trie*Fields, and depending on the field type, they might
       require the field to be single-valued, be required or have a default
       value (check the documentation of the field type you're interested in
       for more information)
     multiValued: true if this field may contain multiple values per document
     omitNorms: (expert) set to true to omit the norms associated with
       this field (this disables length normalization and index-time
       boosting for the field, and saves some memory).  Only full-text
       fields or fields that need an index-time boost need norms.
       Norms are omitted for primitive (non-analyzed) types by default.
     termVectors: [false] set to true to store the term vector for a
       given field.
       When using MoreLikeThis, fields used for similarity should be
       stored for best performance.
     termPositions: Store position information with the term vector.  
       This will increase storage costs.
     termOffsets: Store offset information with the term vector. This 
       will increase storage costs.
     required: The field is required.  It will throw an error if the
       value does not exist
     default: a value that should be used if no value is specified
       when adding a document.
   
-->
<field name="_version_" type="long" indexed="true" stored="true"/>
<field name="afdispcity" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="afdispctry" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="afdispname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affil" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilcity" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilctry" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilcurr" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilhist" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilnamevar" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilparafid" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilprefname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="affilsortname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="afhistcity" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="afhistctry" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="afhistdispname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="afhistid" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<!-- Note:  CIP had afid defined differently for the two types (one was an int and one was a string.  Differentiating them here with a suffix   -->
<field name="afid-p" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="afid-a" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="afnameid" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="alias" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="aliascurstatus" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="aliasauthorid" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="aliastimestamp" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="aliasstatus" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="authfirst" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="authid" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="authlast" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="authname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="certscore" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="count" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="datecompletedtxt" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="eid" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="fastloaddate" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="issn" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="loaddate" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="loadunit" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="namevar" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="namevarfirst" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="namevarini" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="namevarlast" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="parafid" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="preffirst" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="preffirstsort" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="prefini" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="preflast" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="prefname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="prefparname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="pubrangefirst" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="pubrangelast" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="quality" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="sortname" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="srctitle" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="status" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="subjabbr" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="subjclus" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="subjmain" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="suppress" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="toplevel" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
<field name="transid" type="hothouse_std" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>

</fields>
<uniqueKey>eid</uniqueKey>

<types>

<fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
<fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>

<fieldType name="hothouse_std" class="solr.TextField" positionIncrementGap="100">
<analyzer type="index">
<tokenizer class="solr.StandardTokenizerFactory"/>
<!--
 in this example, we will only use synonyms at query time <filter class="solr.SynonymFilterFactory" 
			synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/> 
-->
<!--  Case insensitive stop word removal.  -->
<!--
 Leaving in stop words now <filter class="solr.StopFilterFactory" ignoreCase="true" 
			words="lang/stopwords_en.txt" /> 
-->
<filter class="solr.LowerCaseFilterFactory"/>
<!--  remove the 's possessives from the index  -->
<filter class="solr.EnglishPossessiveFilterFactory"/>
<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
<filter class="solr.EnglishMinimalStemFilterFactory"/>
<!--  <filter class="solr.PorterStemFilterFactory"/>  -->
</analyzer>
<analyzer type="query">
<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
<tokenizer class="solr.StandardTokenizerFactory"/>
<filter class="solr.LowerCaseFilterFactory"/>

<!-- added stopwords by Jae Joo 9/25/2013 5:54PM -->
<filter class="solr.StopFilterFactory" ignoreCase="true" 
			words="lang/stopwords_en.txt" /> 
<!--
 leave in stop words <filter class="solr.StopFilterFactory" ignoreCase="true" 
			words="lang/stopwords_en.txt" /> 
-->
<filter class="solr.EnglishPossessiveFilterFactory"/>
<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
<filter class="solr.EnglishMinimalStemFilterFactory"/>
<!--  <filter class="solr.PorterStemFilterFactory"/>  -->
</analyzer>
</fieldType>
<!--
 phrase is case insensitive and ignores punctuation unstemmed for phrase matching but does character replacement for diacritics 
-->
<fieldType name="hothouse_phrase" class="solr.TextField" positionIncrementGap="100">
<analyzer>
<charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
<tokenizer class="solr.WhitespaceTokenizerFactory"/>
<filter class="solr.LowerCaseFilterFactory"/>
</analyzer>
</fieldType>
<!--  Keywords with lower casing and trimming  -->
<fieldType name="hothouse_kwd_lc" class="solr.TextField" sortMissingLast="true" omitNorms="true">
<analyzer>
<!--
 KeywordTokenizer does no actual tokenizing, so the entire input string 
			is preserved as a single token 
-->
<tokenizer class="solr.KeywordTokenizerFactory"/>
<!--
 The LowerCase TokenFilter does what you expect, which can be when 
			you want your sorting to be case insensitive 
-->
<filter class="solr.LowerCaseFilterFactory"/>
<!--
 The TrimFilter removes any leading or trailing whitespace 
-->
<filter class="solr.TrimFilterFactory"/>
</analyzer>
</fieldType>
<!--
 Keywords with lower casing and trimming and no punctuation 
-->
<fieldType name="hothouse_norm_lc" class="solr.TextField" sortMissingLast="true" omitNorms="true">
<analyzer>
<tokenizer class="solr.StandardTokenizerFactory"/>
<filter class="solr.LowerCaseFilterFactory"/>
<!--
 The TrimFilter removes any leading or trailing whitespace 
-->
<filter class="solr.TrimFilterFactory"/>
</analyzer>
</fieldType>
<fieldType name="string" class="solr.StrField" sortMissingLast="true"/>
<!--  boolean type: "true" or "false"  -->
<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
</types>
</schema>
